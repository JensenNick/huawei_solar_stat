# ---------------------------------------------
# HUAWEI SOLAR STAT - Energy Statistics Sensors
# ---------------------------------------------
# version: v1.0.0-alpha
# branch: 
# domain: https://github.com/JensenNick/huawei_solar_stat
# codeowner: Nick Jensen
#
# The "Huawei Solar STAT package" is dependant on input sensors provided by the "Huawei
# Solar PEES package" v2.0.7 or later, so be sure to install and setup the PEES package
# before setting up this package. All input to the sensors below is done in the "Input Card"
# which also is provided in the "Huawei Solar PEES package".
#
# Pay attention to the utility meters added in this package. They will not provide a value
# before they have completed a full cycle.
#
# ----------------
# TEMPLATE SENSORS
# ----------------
template:
  - sensor:
      ## ------------------------------------
      ## Huawei Solar STAT - Battery Capacity
      - name: "Energy Battery Discharge Capacity (ts)"
        unique_id: energy_battery_discharge_capacity_ts
        unit_of_measurement: kWh
        state_class: measurement
        state: >
          {% set rated_capacity = states('input_number.battery_rated_capacity') | float(0) %}
          {% set percent_availible = (
          states('sensor.battery_state_of_capacity') | float(0) -
          states('number.battery_end_of_discharge_soc') | float(0)
          ) | float(0) / 100 %}
            {{ rated_capacity * percent_availible }}
        availability: >
          {{ has_value('sensor.battery_state_of_capacity') and
          has_value('number.battery_end_of_discharge_soc') }}
      - name: "Energy Battery Charge Grid Capacity (ts)"
        unique_id: energy_battery_charge_grid_capacity_ts
        unit_of_measurement: kWh
        state_class: measurement
        state: >
          {% set rated_capacity = states('input_number.battery_rated_capacity') | float(0) %}
          {% set percent_availible = ( 
          states('number.battery_grid_charge_cutoff_soc') | float(0) -
          states('sensor.battery_state_of_capacity') | float(0)
          ) | float(0) / 100 %}
            {{ rated_capacity * percent_availible }}
        availability: >
          {{ has_value('sensor.battery_state_of_capacity') and
          has_value('number.battery_grid_charge_cutoff_soc') }}
      - name: "Energy Battery Charge Yield Capacity (ts)"
        unique_id: energy_battery_charge_yield_capacity_ts
        unit_of_measurement: kWh
        state_class: measurement
        state: >
          {% set rated_capacity = states('input_number.battery_rated_capacity') | float(0) %}
          {% set percent_availible = (
          states('number.battery_end_of_charge_soc') | float(0) -
          states('sensor.battery_state_of_capacity') | float(0)
          ) | float(0) / 100 %}
            {{ rated_capacity * percent_availible }}
        availability: >
          {{ has_value('sensor.battery_state_of_capacity') and
          has_value('number.battery_end_of_charge_soc') }}
      ## --------------------------------------
      ## Huawei Solar STAT - Battery Efficiency
      - name: "Battery Efficiency Total (ts)"
        unique_id: battery_efficiency_total_ts
        unit_of_measurement: "%"
        device_class: power_factor
        state_class: measurement
        state: >
          {% set start_value_charge = states('input_number.battery_efficiency_start_value_charge') | float(0) %}
          {% set start_value_discharge = states('input_number.battery_efficiency_start_value_discharge') | float(0) %}
          {% set discharge = states('sensor.battery_efficiency_state_discharge_tt') | float(0) - start_value_discharge %}
          {% set charge = states('sensor.battery_efficiency_state_charge_tt') | float - start_value_charge %}
            {{ (( discharge / charge ) * 100 ) | float(0) | round(1) }}
        attributes:
          daily: >
            {{ ((
            states('sensor.daily_battery_efficiency_state_discharge') | float(0) /
            states('sensor.daily_battery_efficiency_state_charge') | float
            ) * 100 ) | float(0) | round(1) }}
          weekly: >
            {{ ((
            states('sensor.weekly_battery_efficiency_state_discharge') | float(0) /
            states('sensor.weekly_battery_efficiency_state_charge') | float
            ) * 100 ) | float(0) | round(1) }}
          monthly: >
            {{ ((
            states('sensor.monthly_battery_efficiency_state_discharge') | float(0) /
            states('sensor.monthly_battery_efficiency_state_charge') | float
            ) * 100 ) | float(0) | round(1) }}
          quarterly: >
            {{ ((
            states('sensor.quarterly_battery_efficiency_state_discharge') | float(0) /
            states('sensor.quarterly_battery_efficiency_state_charge') | float
            ) * 100 ) | float(0) | round(1) }}
          yearly: >
            {{ ((
            states('sensor.yearly_battery_efficiency_state_discharge') | float(0) /
            states('sensor.yearly_battery_efficiency_state_charge') | float
            ) * 100 ) | float(0) | round(1) }}
          availability: >
            {{ has_value('sensor.battery_efficiency_state_charge_tt') and
            has_value('sensor.daily_battery_efficiency_state_charge') and
            has_value('sensor.weekly_battery_efficiency_state_charge') and
            has_value('sensor.monthly_battery_efficiency_state_charge') and
            has_value('sensor.quarterly_battery_efficiency_state_charge') and
            has_value('sensor.yearly_battery_efficiency_state_charge') }}
      ## --------------------------------
      ## Huawei Solar STAT - Price pr kWh
      - name: "Price/kWh wo PV (ts)"
        unique_id: price_kwh_wo_pv_ts
        unit_of_measurement: DKK
        state_class: measurement
        state: >
          {{ states('sensor.house_load_cost') | float(0) /
          states('sensor.house_load_energy') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_house_load_cost') | float(0) /
            states('sensor.daily_house_load_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_house_load_cost') | float(0) /
            states('sensor.weekly_house_load_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_house_load_cost') | float(0) /
            states('sensor.monthly_house_load_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_house_load_cost') | float(0) /
            states('sensor.quarterly_house_load_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_house_load_cost') | float(0) /
            states('sensor.yearly_house_load_energy') | float }}
        availability: >
          {{ has_value('sensor.house_load_energy') and
          has_value('sensor.daily_house_load_energy') and
          has_value('sensor.weekly_house_load_energy') and
          has_value('sensor.monthly_house_load_energy') and
          has_value('sensor.quarterly_house_load_energy') and
          has_value('sensor.yearly_house_load_energy') }}
      - name: "Price/kWh w PV (ts)"
        unique_id: price_kwh_w_pv_ts
        unit_of_measurement: DKK
        state: >
          {{ states('sensor.import_cost') | float(0) /
          states('sensor.house_load_energy') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_import_cost') | float(0) /
            states('sensor.daily_house_load_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_import_cost') | float(0) /
            states('sensor.weekly_house_load_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_import_cost') | float(0) /
            states('sensor.monthly_house_load_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_import_cost') | float(0) /
            states('sensor.quarterly_house_load_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_import_cost') | float(0) /
            states('sensor.yearly_house_load_energy') | float }}
        availability: >
          {{ has_value('sensor.house_load_energy') and
          has_value('sensor.daily_house_load_energy') and
          has_value('sensor.weekly_house_load_energy') and
          has_value('sensor.monthly_house_load_energy') and
          has_value('sensor.quarterly_house_load_energy') and
          has_value('sensor.yearly_house_load_energy') }}
      - name: "Price/kWh Import (ts)"
        unique_id: price_kwh_import_ts
        unit_of_measurement: DKK
        state: >
          {{ states('sensor.import_cost') | float(0) /
          states('sensor.energy_import') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_import_cost') | float(0) /
            states('sensor.daily_import_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_import_cost') | float(0) /
            states('sensor.weekly_import_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_import_cost') | float(0) /
            states('sensor.monthly_import_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_import_cost') | float(0) /
            states('sensor.quarterly_import_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_import_cost') | float(0) /
            states('sensor.yearly_import_energy') | float }}
        availability: >
          {{ has_value('sensor.energy_import') and
          has_value('sensor.daily_import_energy') and
          has_value('sensor.weekly_import_energy') and
          has_value('sensor.monthly_import_energy') and
          has_value('sensor.quarterly_import_energy') and
          has_value('sensor.yearly_import_energy') }}
      - name: "Price/kWh Export (ts)"
        unique_id: price_kwh_export_ts
        unit_of_measurement: DKK
        state: >
          {{ states('sensor.export_income') | float(0) /
          states('sensor.energy_export') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_export_income') | float(0) /
            states('sensor.daily_export_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_export_income') | float(0) /
            states('sensor.weekly_export_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_export_income') | float(0) /
            states('sensor.monthly_export_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_export_income') | float(0) /
            states('sensor.quarterly_export_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_export_income') | float(0) /
            states('sensor.yearly_export_energy') | float }}
        availability: >
          {{ has_value('sensor.energy_export') and
          has_value('sensor.daily_export_energy') and
          has_value('sensor.weekly_export_energy') and
          has_value('sensor.monthly_export_energy') and
          has_value('sensor.quarterly_export_energy') and
          has_value('sensor.yearly_export_energy') }}
      - name: "Price/kWh Export Yield (ts)"
        unique_id: price_kwh_export_yield_ts
        unit_of_measurement: DKK
        state: >
          {{ states('sensor.export_yield_sale') | float(0) /
          states('sensor.energy_export_yield') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_export_yield_sale') | float(0) /
            states('sensor.daily_export_yield_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_export_yield_sale') | float(0) /
            states('sensor.weekly_export_yield_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_export_yield_sale') | float(0) /
            states('sensor.monthly_export_yield_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_export_yield_sale') | float(0) /
            states('sensor.quarterly_export_yield_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_export_yield_sale') | float(0) /
            states('sensor.yearly_export_yield_energy') | float }}
        availability: >
          {{ has_value('sensor.energy_export_yield') and
          has_value('sensor.daily_export_yield_energy') and
          has_value('sensor.weekly_export_yield_energy') and
          has_value('sensor.monthly_export_yield_energy') and
          has_value('sensor.quarterly_export_yield_energy') and
          has_value('sensor.yearly_export_yield_energy') }}
      - name: "Price/kWh Export Battery Discharge (ts)"
        unique_id: price_kwh_export_battery_discharge_ts
        unit_of_measurement: DKK
        state: >
          {{ states('sensor.battery_discharge_grid_sale') | float(0) /
          states('sensor.energy_battery_discharge_grid') | float }}
        attributes:
          daily: >
            {{ states('sensor.daily_battery_discharge_grid_sale') | float(0) /
            states('sensor.daily_battery_discharge_grid_energy') | float }}
          weekly: >
            {{ states('sensor.weekly_battery_discharge_grid_sale') | float(0) /
            states('sensor.weekly_battery_discharge_grid_energy') | float }}
          monthly: >
            {{ states('sensor.monthly_battery_discharge_grid_sale') | float(0) /
            states('sensor.monthly_battery_discharge_grid_energy') | float }}
          quarterly: >
            {{ states('sensor.quarterly_battery_discharge_grid_sale') | float(0) /
            states('sensor.quarterly_battery_discharge_grid_energy') | float }}
          yearly: >
            {{ states('sensor.yearly_battery_discharge_grid_sale') | float(0) /
            states('sensor.yearly_battery_discharge_grid_energy') | float }}
        availability: >
          {{ has_value('sensor.energy_battery_discharge_grid') and
          has_value('sensor.daily_battery_discharge_grid_energy') and
          has_value('sensor.weekly_battery_discharge_grid_energy') and
          has_value('sensor.monthly_battery_discharge_grid_energy') and
          has_value('sensor.quarterly_battery_discharge_grid_energy') and
          has_value('sensor.yearly_battery_discharge_grid_energy') }}
      ## --------------------------------
      ## Huawei Solar STAT - Instant Price
      - name: "Instant Price - House Load wo PV (ts)"
        unique_id: instant_price_house_load_wo_pv_ts
        unit_of_measurement: DKK
        state_class: measurement
        state: >
          {{ (
          states('sensor.energi_data_service') | float(0) * 
          states('sensor.power_house_load') | float(0) / 1000
          ) | round(2) }}
        availability: >
          {{ has_value('sensor.energi_data_service') and
          has_value('sensor.power_house_load') }}
      - name: "Instant Price - House Load w PV (ts)"
        unique_id: instant_price_house_load_w_pv_ts
        unit_of_measurement: DKK
        state_class: measurement
        state: >
          {{ (
          states('sensor.energi_data_service') | float(0) * 
          states('sensor.power_house_load_grid') | float(0) / 1000
          ) | round(2) }}
        availability: >
          {{ has_value('sensor.energi_data_service') and
          has_value('sensor.power_house_load_grid') }}
      ## ------------------------------------
      ## Huawei Solar STAT - Self Sufficiency
      - name: "Solar PV Self Sufficiency (ts)"
        unique_id: solar_pv_self_sufficiency_ts
        unit_of_measurement: "%"
        state_class: measurement
        state: >
          {{ (( 1 - (
          states('sensor.energy_import') | float(0) /
          states('sensor.energy_house_load') | float
          )) * 100 ) | round(1) }}
        attributes:
          daily: >
            {{ (( 1 - (
            states('sensor.daily_import_energy') | float(0) /
            states('sensor.daily_house_load_energy') | float
            )) * 100 ) | round(1) }}
          weekly: >
            {{ (( 1 - (
            states('sensor.weekly_import_energy') | float(0) /
            states('sensor.weekly_house_load_energy') | float
            )) * 100 ) | round(1) }}
          monthly: >
            {{ (( 1 - (
            states('sensor.monthly_import_energy') | float(0) /
            states('sensor.monthly_house_load_energy') | float
            )) * 100 ) | round(1) }}
          quarterly: >
            {{ (( 1 - (
            states('sensor.quarterly_import_energy') | float(0) /
            states('sensor.quarterly_house_load_energy') | float
            )) * 100 ) | round(1) }}
          yearly: >
            {{ (( 1 - (
            states('sensor.yearly_import_energy') | float(0) /
            states('sensor.yearly_house_load_energy') | float
            )) * 100 ) | round(1) }}
        availability: >
          {{ has_value('sensor.energy_house_load') and
          has_value('sensor.daily_house_load_energy') and
          has_value('sensor.weekly_house_load_energy') and
          has_value('sensor.monthly_house_load_energy') and
          has_value('sensor.quarterly_house_load_energy') and
          has_value('sensor.yearly_house_load_energy') }}
      ## --------------------------------
      ## Huawei Solar STAT - Yield pr kWp
      - name: "Yield Total pr kWp (ts)"
        unique_id: yield_total_pr_kwp_ts
        unit_of_measurement: "kWh/kWp"
        state_class: measurement
        state: >
          {% set kwp = (
          states('input_number.panels_on_inverter_1') | float(0) +
          states('input_number.panels_on_inverter_2') | float(0)
          ) * states('input_number.panels_rated_wp') | float(0) / 1000 %}
          {% set yield = states('sensor.energy_yield_total') | float(0) %}
            {{ yield / kwp | round (3) }}
        availability: >
          {{ has_value('sensor.energy_yield_total') }}
      - name: "Yield #1 pr kWp (ts)"
        unique_id: yield_1_pr_kwp_ts
        unit_of_measurement: "kWh/kWp"
        state_class: measurement
        state: >
          {% set kwp =
          states('input_number.panels_on_inverter_1') | float(0) *
          states('input_number.panels_rated_wp') | float(0) / 1000 %}
          {% set yield = states('sensor.energy_yield_1') | float(0) %}
            {{ yield / kwp | round(3) }}
        availability: >
          {{ has_value('sensor.energy_yield_1') }}
      - name: "Yield #2 pr kWp (ts)"
        unique_id: yield_2_pr_kwp_ts
        unit_of_measurement: "kWh/kWp"
        state_class: measurement
        state: >
          {% set kwp =
          states('input_number.panels_on_inverter_2') | float(0) *
          states('input_number.panels_rated_wp') | float(0) / 1000 %}
          {% set yield = states('sensor.energy_yield_2') | float(0) %}
            {{ yield / kwp | round(3) }}
        availability: >
          {{ has_value('sensor.energy_yield_2') }}
  # ------------------------
  # TEMPLATE TRIGGER SENSORS
  # ------------------------
  ## --------------------------------------
  ## Huawei Solar STAT - Battery Efficiency
  - trigger:
      - platform: template
        value_template: >
          {{ states('sensor.battery_state_of_capacity') | float(0) ==
          states('input_number.battery_efficiency_soc_trigger') | float(50) }}
    sensor:
      name: "Battery Efficiency State Charge (tt)"
      unique_id: battery_efficiency_state_charge_tt
      unit_of_measurement: kWh
      state_class: measurement
      state: >
        {{ states('sensor.energy_battery_charge') | float(0) }}
      availability: >
        {{ has_value('sensor.energy_battery_charge') }}
  - trigger:
      - platform: template
        value_template: >
          {{ states('sensor.battery_state_of_capacity') | float(0) ==
          states('input_number.battery_efficiency_soc_trigger') | float(50) }}
    sensor:
      name: "Battery Efficiency State Discharge (tt)"
      unique_id: battery_efficiency_state_discharge_tt
      unit_of_measurement: kWh
      state_class: measurement
      state: >
        {{ states('sensor.energy_battery_discharge') | float(0) }}
      availability: >
        {{ has_value('sensor.energy_battery_discharge') }}
# --------------
# UTILITY METERS
# --------------
utility_meter:
  ## --------------------------------------
  ## Huawei Solar STAT - Battery Efficiency
  daily_battery_efficiency_state_charge:
    source: sensor.battery_efficiency_state_charge_tt
    name: "Daily Battery Efficiency State Charge"
    unique_id: daily_battery_efficiency_state_charge
    cycle: daily
  weekly_battery_efficiency_state_charge:
    source: sensor.battery_efficiency_state_charge_tt
    name: "Weekly Battery Efficiency State Charge"
    unique_id: weekly_battery_efficiency_state_charge
    cycle: weekly
  monthly_battery_efficiency_state_charge:
    source: sensor.battery_efficiency_state_charge_tt
    name: "Monthly Battery Efficiency State Charge"
    unique_id: monthly_battery_efficiency_state_charge
    cycle: monthly
  quarterly_battery_efficiency_state_charge:
    source: sensor.battery_efficiency_state_charge_tt
    name: "Quarterly Battery Efficiency State Charge"
    unique_id: quarterly_battery_efficiency_state_charge
    cycle: quarterly
  yearly_battery_efficiency_state_charge:
    source: sensor.battery_efficiency_state_charge_tt
    name: "Yearly Battery Efficiency State Charge"
    unique_id: yearly_battery_efficiency_state_charge
    cycle: yearly
  daily_battery_efficiency_state_discharge:
    source: sensor.battery_efficiency_state_discharge_tt
    name: "Daily Battery Efficiency State Discharge"
    unique_id: daily_battery_efficiency_state_discharge
    cycle: daily
  weekly_battery_efficiency_state_discharge:
    source: sensor.battery_efficiency_state_discharge_tt
    name: "Weekly Battery Efficiency State Discharge"
    unique_id: weekly_battery_efficiency_state_discharge
    cycle: weekly
  monthly_battery_efficiency_state_discharge:
    source: sensor.battery_efficiency_state_discharge_tt
    name: "Monthly Battery Efficiency State Discharge"
    unique_id: monthly_battery_efficiency_state_discharge
    cycle: monthly
  quarterly_battery_efficiency_state_discharge:
    source: sensor.battery_efficiency_state_discharge_tt
    name: "Quarterly Battery Efficiency State Discharge"
    unique_id: quarterly_battery_efficiency_state_discharge
    cycle: quarterly
  yearly_battery_efficiency_state_discharge:
    source: sensor.battery_efficiency_state_discharge_tt
    name: "Yearly Battery Efficiency State Discharge"
    unique_id: yearly_battery_efficiency_state_discharge
    cycle: yearly
